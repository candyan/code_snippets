https://www.ralfebert.de/git/ # Sehr gutes und einfaches Git Tutorial
http://chris.beams.io/posts/git-commit/ # How to write proper Git commit messages
git checkout <branch> # change to another branch
git checkout <file> # restore files in working tree from index
git branch -d the_local_branch # delete a local branch
git push origin :the_remote_branch # remove a remote branch
git config --list
git config --global user.name "John Doe" # set git account username
git config --global user.email "john.doe@gmail.com" # set git account email
git config --global color.ui auto # color highlighted terminal output
git config --global core.safecrlf false # disable "LF will be replaced by CLRF" warning in git on Windows
git config --global credential.helper cache # cache the password in the memory
git config credential.helper 'cache --timeout=900' # remember the password for 15 minutes
git config --global push.default simple # push only to active upstream branch
git config --global alias.unstage "reset HEAD" # setup an alias
git config --unset <variable> # reset variable
curl -u 'john-doe' https://api.github.com/user/repos -d '{"name":"my_repo_name"}' # remote setup github repo
git remote set-url <name> <newurl> <oldurl>
git remote add origin https://github.com/john-doe/my_repo_name.git
git pull origin master # update local copy
git reset # undo "git add"
git reset <file> # undo "git add" for a file
git reset --hard origin/master # force overwrite of untracked working tree files
git init
git add .
git rm --cached <file> # undo add of file
git status
git diff <commit> # see the changes in a commit
git diff <commit_from> <commit_to>
git diff --cached <file>
git log
git commit -m "Initial commit"
git commit -m --amend # edit the last commit message
git checkout filename # reset a single file
git checkout -- filename # reset a single file with has the same name as a branch
git checkout feature_1 -- path/to/file/iwant # checkout a single file from another commit or branch
git revert <commit>
git push -u origin master # replace master with the name of the branch you want to push
git tag 1.0.0 <commit> # tag a commit
git diff <tag>..<tag> # show difference from tag to tag
